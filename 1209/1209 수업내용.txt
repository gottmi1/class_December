취업지원 관련사항 자소서등 
-> 포트폴리오 제출(링크)

-> 강사님이 유일하게 하나 정해준 주제 = about me(포트폴리오)
 좌절하게 됨 -> 생각보다 내가 나를 설명한 꺼리가 없어
 내게 무슨 장점이 있는지 어떤 단점이 있는지,
 뭘 좋아하고 싫어하는지 
 뭘해오고 무엇을 만들것인지
 이런 사소한 것들을 다 써보면서 
 -> 나를 탐구 -> 표현할 준비

 포트폴리오의 주제는 "나"

 --------------------- 효율 따지면 끝이 없고 정체성을 알면 로드맵이 그려질 것

 회사 이야기
 사무직은 일일 업무계획을 세우고 보고
 일일 업무를 보고 -> 퇴근할 떄 제출 -> 인사고과
 내 일정을 내가 체크 해야함

------------

node.js = 백엔드에서 쓰이는 무언가

백엔드를 왜배움?
1. 개편해서
2. 리액트 뷰 등의 프레임웍등이 여기에 의존하기 때문에

node.j -> 자바스크립트를 1등언어로 만든 1등 공신

브라우저에 내장되어있던 자바스크립트의 엔진을
바깥으로 꺼내온 것

전문용어로 브라우저 런타임 -> 개발 런타임(실행가능한 무언가)
자바스크립트로 자바,C, 개발환경을 구축할 수 있게 된 것
 
노드를 사용하면 자바스크립트로 프론트,백을 다 건들 수 있는 것

1. 개발환경에서 자바스크립트를 직접 실행(지금까지는 브라우저를 통해서만 할 수 있었음)
2. npm(노드 패키지 매니저) 
-> npm이라는 거대한 커뮤니티를 직접 사용할 수 있게 됐다
-> 개발자들은 뭔가를 만들면 npm에 올려서 배포함
-> 우리같은 좢밥은 가져다가 쓰면 됨



npm = 글씨로만 접근할 수 있는 큰 도서관을 이용한다는 느낌

입장권 : node.js

중급, 고급 프레임워크를 배울 때 npm에 접근할 일이 굉장히 많을 것
여러가지 기능이 많지만
지금 당장 알 수 있는 것 : js파일을 에디터에서 실행이 가능하다는 것

개발자들은 일일이 브라우저를 키면서 작업하지 않고 매개변수로 알고리즘을 짬
출력을 설정

이렇게 할때 장점

1. 보안
2. 유지보수
레고 블럭처럼 나누어서 작업


UI : 일반 사용자가 쓸 수 있도록 만드는 인터페이스
Api (application program interfac) : 개발자가 사용할 수 있도록 만든 인터페이스

api -> 개발 방법을 설명해주는 조건 -> api문서
mdn : javascript API 문서


그동안 html -> 마크업 -> 마크업 기반으로 제어

개발자들은

마크업 됐다 치고~
입력(매개변수) -> 매개변수로 작업 -> 리턴만 잘하면 됨
매개변수로 알고리즘을 짠다

부트캠프 같은 곳에선
html css js 기본문법 -> node.js -> 웹사이트 만드는 것을 react부터 시작
많은 연습량이 깔려있으면 좋은 로드맵이지만
아니면 리액트 없으면 웹페이지를 못만듬

취업전망 
-> 프론트엔드 프레임워크가 계속 호환됨 
-> react를 쓸줄 아는 사람들이 많이 생김
- js 기본을 또 안하고 리액트 껍데기만 배우는 신입들이 많다

알아야 할 것 리액트의 진입점 -> node.js 기반


kuler -> 색상이 고민될떄
포토샵 플러그인 이었는데 디자이너가 너무 많이쓰니까
-> 어도비가 사고 배포

git graph
-> 눈으로 보니 조금 편할 것들을

better comments <- 주석에 색깔 달아주는 플러그인
codesnap <- 코드캡쳐가능

디자인 세련되게 하고싶으면

1. 폰트사이즈 2rem이상 하지 않는 게 좋음
-> 글씨가 작은게 꽤 도움이 됨
-> 1rem : 16px : 읽기 좋다고 인식되는 상태
- 굳이 기준점을 잡는다면 1rem이상은 글씨를 강조

2. 색은 기본형으로 무채색 + 메인컬러를 조합햇을 떄 어울릴 것
-> 부조색을 썼을떄도 어울려짐
-> 메인컬러의 다양성을 확보할 것
a,b,c,d a-1, a-2

컬러를 풍부하게 쓰는 것 : 메인 색상을 풍부하게 쓰는 것
여러 색을 한번에 쓰는것이 아니다.



스페이스(영역) 다루는 지식이 생김
강력한 도구 (제어를 직접함) -> UI의 폭을 넓혀준다

gsap
라이브러리 규칙에 맞춰서 사용하면 된다

jquery : DOM,BOM 라이브러리
GSAP : 애니메이션만 쓰는 라이브러리
-> 우리 배우는 것 보다 난이도가 한참 떨어짐
-> 커스터마이징 -> 원리

node.js 
자바스크립트 엔진을 꺼내온 거
npm
어떤 도서관 ->cli로만 입장가능
cli 
커맨드라인
UI
유저인터페이스
API
개발자가 쓰는 인터페이스

지금까지 배운 것 : HTMLAPI,CSSAPI,DOMAPI,BOMAPI -> 조합해서 웹사이트
API를 다룰 줄 아는 사람

https://www.oera.com/