브랜치가 몇 개 있는지 나옴
- git branch -m 이름
해당 브런치의 이름을 새것으로 변경 

git에 올릴떈 한 폴더에 폴더를 존나 만들지 말고
브랜치를 새로 만들어서 거기다가 하나씩 올리면 개꿀

작업할 때 : 브랜치 생성
브랜치로 들어가서 새로운 작업을 진행
-> 회사에선 이렇게 보여줌 -> commit을 통해 마스터 관리자에게 결재(작업물에 대한 컨펌)받음
작업 관리자 : 여러 브랜치를 합치는 과정을 수행함

메인 브랜치에서 git merge `새로만든 브랜치`


주요

git init -> 이니셜라이즈 (필수
git add -> 스테이징 .
git commit -m -> 커밋쓰기
git clone -> 해당 주소의 레퍼지토리 복사해오기
git push -> 해당 주소에 밀어넣기
git pull -> 해당 주소거 떙겨오기(똑같은 폴더에 업데이트 된 내용이 있을경우 사용함)
git branch 뒤에 폴더 이름 쓰면 만들고 안쓰면 현재 브랜치 조회하고 -d 쓰면 지우고
git checkout -> 브랜치 변경

https://backlog.com/git-tutorial/kr/stepup/stepup2_4.html
여기 참고하면 좋을듯


git : 닥치고 쓰라고 함


class.js -> 생성자 함수/ 거푸집이라고 이해하면 편함

class Function Name () { // 대문자인 이유 : 건들지 말라고
constructor () {구조화 시키는 무언가}
}
★function1() {} (객체를 만드는 공장)을 만드는 공장 2차 하청의 하청
★function2() {}
★function3() {}


css 전 처리기
scss,less,sass <- 자바스크립트화 된 놈들
css를 스크립트처럼 썼으면 해서 나온 전처리기
작접 전에 정해놓는 방식
-> 컴퓨터 한테 해석을 맡기며
-> 컴퓨터는 scss를 만나면 해석한 다음 css로 뱉어냄
-> 컴파일링 방식

리액트,뷰 -> 자바스크립트로 -> html css 모두 다루고싶은 방식
자바스크립트에 익숙해져야 쓸만함

beautyfy <-- 코드 들여쓰기 같은 거 정리하는 포멧터
ESlint <-- 쓸데없는 코드들 알람 띄워줌
jshint <- 자바스크립트 작성할 때 힌트 줌
ES6 snippet <- 자바스크립트 자동완성 편하게
래인보우 브라켓 <- 괄호마다 색깔을 다르게해서 가독성 업